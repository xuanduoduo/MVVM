plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.alibaba.arouter'
}

def root_android = rootProject.ext.android
def root_kapt = rootProject.ext.kapt
def biz = rootProject.ext.biz
def modules = rootProject.ext.modules

android {
    resourcePrefix "app_"

    defaultConfig {
        applicationId root_android.applicationId
        minSdkVersion root_android.minSdkVersion
        targetSdkVersion root_android.targetSdkVersion
        compileSdkVersion root_android.compileSdkVersion
        versionCode root_android.versionCode
        versionName root_android.versionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':common')
    implementation project(path: ':widget')
    kapt root_kapt.arouter_compiler

    biz.each { entry ->
        if (entry.value[0]) {
            implementation entry.value[1]
        } else {
            if (modules.(entry.key)[0]) {
                implementation modules.(entry.key)[1]
            }
        }
    }
}

class AppTaskListener implements TaskExecutionListener, BuildListener {
    def timeMills = new LinkedHashMap<String, Long>()
    def lastTimeMill

    @Override
    void beforeExecute(Task task) {
        lastTimeMill = System.currentTimeMillis()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def currentTimeMill = System.currentTimeMillis() - lastTimeMill
        timeMills.put(task.getPath(), currentTimeMill)
        task.project.logger.warn "${task.path} build ${currentTimeMill}ms"
    }

    @Override
    void buildStarted(Gradle gradle) {}

    @Override
    void settingsEvaluated(Settings settings) {}

    @Override
    void projectsLoaded(Gradle gradle) {}

    @Override
    void projectsEvaluated(Gradle gradle) {}

    @Override
    void buildFinished(BuildResult result) {
        println "AppTaskListener: 总共执行了${timeMills.size()}个任务，其中耗时超过100ms的任务有："
        timeMills.each { entry ->
            if (entry.value >= 100) {
                println "${entry.key} build ${entry.value}ms"
            }
        }
    }
}

gradle.addListener(new AppTaskListener())
